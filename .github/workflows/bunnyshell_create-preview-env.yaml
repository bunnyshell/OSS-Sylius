name: Bunnyshell Create Preview Environment
concurrency: bns-pr-${{ github.event.pull_request.url || github.event.issue.pull_request.url }}
on:
  pull_request_target:
    types: [ opened, reopened, synchronize ]
    branches:
      - '*'
  issue_comment:
    types: [ created, edited ]
jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
    - name: Check approved deployment
        ${{ github.event.issue.pull_request
          && contains(github.event.comment.body, '/bns-deploy')
          && contains(fromJSON(vars.BUNNYSHELL_ALLOWED_USERS), github.event.sender.login)
        }}
      run: |
        echo "BNS_ENV_APPROVED=1" >> "$GITHUB_ENV"
    - name: Get restricted files changes
      id: changed-restricted-files
      uses: tj-actions/changed-files@v36
      if: ${{ env.BNS_ENV_APPROVED != '1' }}
      with:
        files: |
         .bunnyshell/
    - name: Comment PR Environment being created
      uses: thollander/actions-comment-pull-request@v2
      if: steps.changed-files-restricted.outputs.any_changed == 'true'
      with:
        message: |
          ### Bunnyshell Preview Environment automatic creation skipped due to restricted files changes.
          
          Add a comment containing `/bns-deploy` to approve the creation of the environment.
        comment_tag: start-${{ github.run_id }}
        reactions: eyes
    - name: Checking restricted files changes
      if: steps.changed-files-restricted.outputs.any_changed == 'true'
      run: |
        echo "Restricted files changed: ${{ steps.changed-files-restricted.outputs.files }}"

        exit 1
  deploy:
    name: Deploy Environment
    needs: checks
    runs-on: ubuntu-latest
    outputs:
      envId: ${{ env.BNS_ENV_ID }}
      envCreated: ${{ env.BNS_ENV_CREATED }}
      appEndpointUrl: ${{ env.APP_ENDPOINT_URL }}
      mailhogEndpointUrl: ${{ env.MAILHOG_ENDPOINT_URL }}
    steps:
    - name: setup-yq
      uses: frenck/action-setup-yq@v1
    - name: Prepare vars
      run: |-
        # If it's a PR comment, extract from PR URL
        PR_URL="${{ github.event.issue.pull_request.url }}"
        PR_NUM=${PR_URL##*/}
        
        # If It's a PR event, get the PR number
        if [ -z "$PR_NUM" ]; then
          PR_NUM="${{ github.event.number }}"
        fi

        echo "BNS_ENV_NAME=Sylius PR #$PR_NUM" >> "$GITHUB_ENV"
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Get Kubernetes integration
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.env }}:/github/envs.txt
        run: |-
          set -ex

          echo "CLUSTER_ID=`bns k8s-clusters list --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --organization ${{ vars.BUNNYSHELL_ORGANIZATION_ID }} --non-interactive -o json \
            | jq -r '._embedded.item[0].id'`" >> /github/envs.txt
    - name: Check existing Environment
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.env }}:/github/envs.txt
        run: |-
          set -ex

          echo "BNS_ENV_ID=`bns environments list --search "${{ env.BNS_ENV_NAME }}" --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --project ${{ vars.BUNNYSHELL_PROJECT_ID }} --non-interactive -o json \
            | jq -r 'try ._embedded.item[0].id | select (.!=null)'`" >> /github/envs.txt
    - name: Prepare bunnyshel.yaml
      run: |-
        set -ex

        yq "(.components[] | select(.gitBranch != null)).gitBranch |= \"$GITHUB_HEAD_REF\"" .bunnyshell/templates/preview/bunnyshell.yaml > bunnyshell_pr.yaml
    - name: Create Environment
      uses: addnab/docker-run-action@v3
      if: "${{ env.BNS_ENV_ID == '' }}"
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.workspace }}:/work -v ${{ github.env }}:/github/envs.txt
        run: |-
          set -ex

          echo "BNS_ENV_CREATED=1" >> /github/envs.txt
          echo "BNS_ENV_ID=`bns environments create --name "${{ env.BNS_ENV_NAME }}" --debug --from-path /work/bunnyshell_pr.yaml --k8s "${{ env.CLUSTER_ID }}" --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --project ${{ vars.BUNNYSHELL_PROJECT_ID }} --non-interactive -o json \
            | jq -r '.id'`" >> /github/envs.txt
    - name: Deploy Environment
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.env }}:/github/envs.txt
        run: |-
          set -ex

          bns environments deploy --id ${{ env.BNS_ENV_ID }} --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --non-interactive

          ENDPOINTS_OUTPUT=`bns environments endpoints --id ${{ env.BNS_ENV_ID }} --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --non-interactive -o json`
          echo "APP_ENDPOINT_URL=`echo \"$ENDPOINTS_OUTPUT\" | jq -r '.[] | select(.name == \"php\") | .endpoints[0]'`" >> /github/envs.txt
          echo "MAILHOG_ENDPOINT_URL=`echo \"$ENDPOINTS_OUTPUT\" | jq -r '.[] | select(.name == \"mailhog\") | .endpoints[0]'`" >> /github/envs.txt
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: deploy
    continue-on-error: true
    steps:
    - name: Smoke tests
      run: |
        set -e
        APP_ENDPOINT=${{ needs.deploy.outputs.appEndpointUrl }}
        if [ -z "$APP_ENDPOINT" ]; then
          echo "No APP_ENDPOINT"
          exit 1
        fi

        curl -s --fail-with-body "$APP_ENDPOINT"
  stop:
    name: Stop Environment
    runs-on: ubuntu-latest
    needs: [deploy, test]
    if: ${{ needs.deploy.outputs.envId != '' }}
    steps:
    - name: Stop Environment
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        run: |
          set -e

          bns environments stop --id ${{ needs.deploy.outputs.envId }} --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --non-interactive
    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v2
      if: "${{ needs.deploy.outputs.envCreated == '1' }}"
      with:
        message: |
          ### Bunnyshell Preview Environment created and stopped

          Add a comment containing `/bns-start` to start the environment.
        comment_tag: deploy-${{ github.run_id }}
        reactions: rocket
